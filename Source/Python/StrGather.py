# Copyright (c) 2007, Intel Corporation
# All rights reserved. This program and the accompanying materials
# are licensed and made available under the terms and conditions of the BSD License
# which accompanies this distribution.  The full text of the license may be found at
# http://opensource.org/licenses/bsd-license.php
#
# THE PROGRAM IS DISTRIBUTED UNDER THE BSD LICENSE ON AN "AS IS" BASIS,
# WITHOUT WARRANTIES OR REPRESENTATIONS OF ANY KIND, EITHER EXPRESS OR IMPLIED.

#
#This file is used to parse a strings file and create or add to a string database file.
#

import EdkLogger
from UniClassObject import *

H_FILE_HEADER = ['//', '//  DO NOT EDIT -- auto-generated file', '//', \
                 '//  This file is generated by the string gather utility', '//']

def CreateBaseNameDefinition(BaseName):
    Str = WriteLine('', '#ifndef _' + BaseName.upper() + '_STRINGS_DEFINE_H_')
    Str = Write(Str, '#define _' + BaseName.upper() + '_STRINGS_DEFINE_H_')
    return Str

def CreateHFile(BaseName):
    HFile = ''
    for Item in H_FILE_HEADER:
        HFile = WriteLine(HFile, Item)
    HFile = WriteLine(HFile, CreateBaseNameDefinition(BaseName))
    return HFile

def CreateCFile(BaseName):
    CFile = ''
    return CFile

def GetFileList(IncludeList, SkipList):
    if IncludeList == None:
        return None
    
    FileList = []
    if SkipList == None:
        SkipList = []
        
    for Dir in IncludeList:
        for File in os.listdir(Dir):
            #
            # Ignore file listed in skip list
            #
            for Skip in SkipList:
                if os.path.splitext(os.path.normcase(File))[1] == Skip:
                    break
            
            FileList.append(os.path.join(Dir, os.path.normcase(File)))
    
    return FileList

def GetStringFiles(UniFilList, IncludeList, SkipList, BaseName):
    if len(UniFilList) > 0:
        Uni = UniFileClassObject(UniFilList)
    
    GetFileList(IncludeList, SkipList)
    
    if len(Uni.StringList) > 0:
        pass
    
    HFile = CreateHFile(BaseName)
    CFile = CreateCFile(BaseName)

    return HFile, CFile

def Write(Target, Item):
    return Target + Item

def WriteLine(Target, Item):
    return Target + Item + '\n'
    
# This acts like the main() function for the script, unless it is 'import'ed into another
# script.
if __name__ == '__main__':
    (h, c) = GetStringFiles(['C:\\Documents and Settings\\hchen30\\Desktop\\inventorystrings.uni'], None, None, 'VVV' )
    print h
    print c
